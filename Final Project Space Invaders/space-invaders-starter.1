#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.
   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 3599 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 197
(6
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname space"
 #"-invaders-starter) (read-case-sensitive #t) (teachpacks ()) (htdp-set"
 #"tings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";; Space Invaders"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";; Constants:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 2 #"  "
0 0 22 3 3 #"300"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 3 #"500"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.5"
0 0 25 3 3 #")  "
0 0 17 3 43 #";speeds (not velocities) in pixels per tick"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"HIT-RANGE"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 1 #" "
0 0 22 3 4 #"1000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 15 #")              "
0 0 17 3 14 #";cockpit cover"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 3 #"   "
0 0 19 3 6 #"\"blue\""
0 0 25 3 15 #")))            "
0 0 17 3 7 #";saucer"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 8 #")       "
0 0 17 3 13 #";tread center"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 7 #"))     "
0 0 17 3 14 #";tread outline"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 3 #"-14"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 8 #")       "
0 0 17 3 4 #";gun"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 7 #"))))   "
0 0 17 3 9 #";loi body"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"TANK-HEIGHT/2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";; Data Definitions:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"game"
0 0 25 3 2 #" ("
0 0 14 3 8 #"invaders"
0 0 25 3 1 #" "
0 0 14 3 8 #"missiles"
0 0 25 3 1 #" "
0 0 14 3 4 #"tank"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";; Game is (make-game  (listof Invader) (listof Missile) Tank)"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; interp. the current state of a space invaders game"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";;         with the current invaders, missiles and tank position"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";; Game constants defined below Missile data definition"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"fn-for-game"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 11 #"fn-for-loin"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 10 #"fn-for-lom"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"fn-for-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; Template rules used:"
0 0 25 29 1 #"\n"
0 0 17 3 90
(7
 #";; - reference: invaders field is INVADER , missiles field is MISSILE"
 #" , tank field is TANK"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";; Tank is (make-tank Number Integer[-1, 1])"
0 0 25 29 1 #"\n"
0 0 17 3 77
(8
 #";; interp. the tank location is x, HEIGHT - TANK-HEIGHT in screen coo"
 #"rdinates"
) 0 0 25 29 1 #"\n"
0 0 17 3 89
(9
 #";;         the tank moves TANK-SPEED pixels per clock tick left if di"
 #"r -1, right if dir 1"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 5 #"))   "
0 0 17 3 19 #";center going right"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 14 #"))            "
0 0 17 3 12 #";going right"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"T2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"))           "
0 0 17 3 11 #";going left"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"fn-for-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tank-dx"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";; template rules used"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; - compound: 2 fields"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 2 #"dx"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";; Invader is (make-invader Number Number  Integer[-1, 1])"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";; interp. the invader is at (x, y) in screen coordinates"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";;         the invader along x by dx pixels per clock tick"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 13 #"))           "
0 0 17 3 25 #";not landed, moving right"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 9 #"))       "
0 0 17 3 28 #";exactly landed, moving left"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"I3"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 17 3 23 #";> landed, moving right"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"fn-for-invader"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 10 #"invader-dx"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; template rules used:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; compound: 3 fields"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; atomic non-distinct: Number"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; atomic non-distinct: Number"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; atomic non-distinct: Number"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"missile"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";; Missile is (make-missile Number Number)"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";; interp. the missile's location is x y in screen coordinates"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 25 #"))                       "
0 0 17 3 11 #";not hit U1"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 5 #")))  "
0 0 17 3 15 #";exactly hit U1"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"M3"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #")  "
0 0 22 3 1 #"5"
0 0 25 3 5 #")))  "
0 0 17 3 9 #";> hit U1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"fn-for-missile"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; template rules used:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; compound: 2 fields"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; atomic non-distinct: Number"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; atomic non-distinct: Number"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"G1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 2 #") "
0 0 14 3 2 #"T1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"G3"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 2 #") "
0 0 14 3 2 #"T1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";; ListOfInvader is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";; empty"
0 0 25 29 1 #"\n"
0 0 17 3 69
(10
 #";; (cons (make-invader Number Number  Integer[-1, 1])  ListOfInvader)"
) 0 0 25 29 1 #"\n"
0 0 17 3 29 #";; interp. a list of invaders"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"fn-for-loin"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #") ("
0 0 14 3 3 #"..."
0 0 25 3 21 #")]                   "
0 0 17 3 10 #";BASE CASE"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 14 #"fn-for-invader"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #")) "
0 0 17 3 8 #";Invader"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 11 #"fn-for-loin"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 7 #")))])) "
0 0 17 3 18 #";NATURAL RECURSION"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; Template rules used:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";;  - one of: 2 cases"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";;  - atomic distinct: empty"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;  - compound: (cons Invader ListOfInvader)"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;  - reference : (first lom) is Invader"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";;  - self-reference: (rest lom) is ListOfInvader"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";; ListOfMissile is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";; (cons missile ListOfMissile)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;interp. a list of missiles that exist in the game"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"M3"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fn-for-lom"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #") ("
0 0 14 3 3 #"..."
0 0 25 3 21 #")]                   "
0 0 17 3 10 #";BASE CASE"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 14 #"fn-for-missile"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #")) "
0 0 17 3 8 #";Invader"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 10 #"fn-for-lom"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 7 #")))])) "
0 0 17 3 18 #";NATURAL RECURSION"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";; Template rules used:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";;  - one of: 2 cases"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";;  - atomic distinct: empty"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";;  - compound: (cons Missile ListOfMissiles)"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;  - reference : (first lom) is Missile"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";;  - self-reference: (rest lom) is ListOfMissile"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";;============"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";; Functions:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; Game -> Game"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";; start the world with (main G0))"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"main"
0 0 25 3 1 #" "
0 0 14 3 1 #"G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 1 #"G"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 25 3 1 #" "
0 0 14 3 12 #"update-state"
0 0 25 3 2 #") "
0 0 17 3 15 #";; Game -> Game"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 11 #"render-game"
0 0 25 3 3 #")  "
0 0 17 3 16 #";; Game -> Image"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 10 #"handle-key"
0 0 25 3 5 #")    "
0 0 17 3 20 #";; WS KeyEvent -> WS"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"stop-when"
0 0 25 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 25 3 4 #"))) "
0 0 17 3 16 #";; WS -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 29 3 1 #"."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; Game -> Game"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; produce the next game state"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-state"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-state"
0 0 25 3 1 #" "
0 0 14 3 2 #"G1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-state"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 5 #"))) ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";(define (update-state s) s) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";; template rules used from the Game data definition"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-state"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-invaders"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"update-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";; ListOfInvader, ListOfMissile -> ListOfInvaders"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";; produces an updates list of the Inveders"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM1"
0 0 25 3 3 #") ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM2"
0 0 25 3 3 #") ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;(define (update-invaders loin lom) loin) ;stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-invaders"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 2 #" ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";; ListOfInvader, ListOfMissiles -> ListOfInvader"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; Remove any invaders that have been hit by missiles"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM4"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";(define (filter-invaders loin lom) loin) ;stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 2 #"[("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 3 #"lom"
0 0 25 3 3 #") ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 3 #"lom"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #") ("
0 0 14 3 15 #"filter-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 3 #"lom"
0 0 25 3 8 #"))])])) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 37 #";; Invader, ListOfMissiles -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";; Returns true only if the Invader is within HIT-RANGE of missile"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM1"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM3"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 4 #"LOM4"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;(define (dead-invader? invader lom) false) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 19 #"]                  "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 4 #"hit?"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #")) "
0 0 14 3 4 #"true"
0 0 25 3 2 #"] "
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"dead-invader?"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 7 #"))])]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; Invader, Missile -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";; checks whether the invader has been hit by the missile"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 2 #"M3"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I3"
0 0 25 3 1 #" "
0 0 14 3 2 #"M3"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;(define (hit? invader m) false);; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";; template rules used from the invader data definition"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"and"
0 0 25 3 3 #" ( "
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 4 #"))) "
0 0 14 3 9 #"HIT-RANGE"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             ( "
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 4 #"))) "
0 0 14 3 9 #"HIT-RANGE"
0 0 25 3 3 #")) "
0 0 14 3 4 #"true"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";; ListOfInvader -> ListOfInvader"
0 0 25 29 1 #"\n"
0 0 17 3 73
(11
 #";; adds to list of invaders 1 randomly placed invader along top of sc"
 #"reen"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #")  ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"LOIN3"
0 0 25 3 4 #")  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #")("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")  ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";(define (move-invaders loin) loin) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #") ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 3 #")] "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-invader"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 13 #"move-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; Number -> ListOfInvader"
0 0 25 29 1 #"\n"
0 0 17 3 73
(12
 #";; Randomly add an invador to an empty list or not, then returns the "
 #"list"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 25 3 2 #" ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 4 #" [ ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 2 #")("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 54 #"                                                     ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 52 #"                                                   ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";;(define (generate-invader INVADE-RATE) empty) ;; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"generate-invader"
0 0 25 3 1 #" "
0 0 14 3 3 #"i_n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 3 #"i_n"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 11 #"INVADE-RATE"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 5 #"))  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; Invader -> Invader"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";; updates and returns a given invader"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-invader"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-invader"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-invader"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";;(define (update-invader invader) I1) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-invader"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 14 3 5 #"WIDTH"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 2 #" ("
0 0 14 3 10 #"invader-dx"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #")) "
0 0 22 3 2 #"-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 10 #"invader-dx"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 4 #") )]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 15 #"INVADER-X-SPEED"
0 0 25 3 2 #" ("
0 0 14 3 10 #"invader-dx"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 14 3 15 #"INVADER-Y-SPEED"
0 0 25 3 3 #") ("
0 0 14 3 10 #"invader-dx"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 6 #") )]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";; ListOfMissile -> ListOfMissile"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";; updates the position of the missiles"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 5 #"))  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 2 #"  "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"140"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";; (define (update-missiles lom) empty) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 18 #"]                 "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 4 #" [( "
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-y"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-missile"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"update-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 8 #")))])]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; Missile -> Missile"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";; moves a single missile up the screen by MISSILE-SPEED"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-missile"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";;(define (update-missile m) m); stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";; template rules used from the missile data definition"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"update-missile"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"make-missile"
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 13 #"MISSILE-SPEED"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; Tank -> Tank"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";; moves tank by tank speed in specified direction (left or right)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";(define (update-tank t) t);stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 3 #" ( "
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 14 3 5 #"WIDTH"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tank-dir"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tank-dir"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"TANK-SPEED"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tank-dir"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 5 #"))) ("
0 0 14 3 8 #"tank-dir"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";; Game -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; renders the game state "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-game"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-game"
0 0 25 3 1 #" "
0 0 14 3 2 #"G1"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-game"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 3 #") ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 3 #") ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 3 #") ("
0 0 14 3 11 #"render-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";(define (render-game g) BACKGROUND) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-game"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 11 #"render-tank"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";; Tank -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 86
(13
 #";;take the Tank from game and places Tank in background at appropriat"
 #"e x,y coordinates"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";;(define (render-tank t) BACKGROUND); stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";; template rules used from the tank data definition"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #")  ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";; ListOfInvader, image -> image"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";; Places invaders into x,y coordinate space"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"place-images"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 90
(14
 #"                                                                     "
 #"                    ("
) 0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 96
(15
 #"                                                                     "
 #"                          ("
) 0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 90 14 0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";(define (render-invaders loin i) i) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 17 #"]                "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #") ("
0 0 14 3 14 #"render-invader"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 6 #"))])) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; Invader, Image -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 90
(16
 #";;take invaders from game and places invaders in background at approp"
 #"riate x,y coordinates"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-invader"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-invader"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-invader"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 14 #"render-invader"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";(define (render-invader invader i) BACKGROUND);stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-invader"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"INVADER"
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 3 #") ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";; ListOfMissile -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";; renders the list of Missiles onto the screen"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 12 #"place-images"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 12 #"make-missile"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 12 #"place-images"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"render-invaders"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 11 #"render-tank"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";;(define (render-missiles lom i) i) ; stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 20 #"]                   "
0 0 17 3 10 #";BASE CASE"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 15 #"render-missiles"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 3 #") ("
0 0 14 3 14 #"render-missile"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lom"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 6 #"))])) "
0 0 17 3 18 #";NATURAL RECURSION"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; Missile, Image -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";; places an image of a missile on the given image"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-missile"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-missile"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-missile"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 3 #") ("
0 0 14 3 14 #"render-missile"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";(define (render-missile m i) BACKGROUND);stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"render-missile"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 7 #"MISSILE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"missile-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #") ("
0 0 14 3 9 #"missile-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 1 #"i"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";; handle-key"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";; WS KeyEvent -> WS"
0 0 25 29 1 #"\n"
0 0 17 3 100
(17
 #";; changes the direction of the tank when an arrow is clicked. Fires "
 #"a missile when space is clicked"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"G1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"G1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T0"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"G3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"M1"
0 0 25 3 1 #" "
0 0 14 3 2 #"M2"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"T1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 1 #")"
0 0 22 3 1 #"2"
0 0 25 3 5 #")))) "
0 0 14 3 2 #"T1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";;(define (handle-key g key) g) ;stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";; template"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"ws"
0 0 25 3 1 #" "
0 0 14 3 3 #"key"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 3 #") ("
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 2 #"ws"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 2 #"ws"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #")) "
0 0 22 3 2 #"-1"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-tank"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ke"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-game"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-missiles"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-missile"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tank-x"
0 0 25 3 2 #" ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"TANK"
0 0 25 3 1 #")"
0 0 22 3 1 #"2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 9 #"game-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";(define G0 (make-game empty empty T0))"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";(define G1 (make-game empty empty T1))"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";(define G2 (make-game (list I1) (list M1) T1))"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";(define G3 (make-game (list I1 I2) (list M1 M2) T1))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";; the end of the game"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";; Game -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";; stops the game when an invader reaches the bottom of the screen"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 25 3 1 #" "
0 0 14 3 2 #"G0"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 25 3 1 #" "
0 0 14 3 2 #"G2"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 25 3 1 #" "
0 0 14 3 2 #"G3"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";(define (game-over? g) false) ;stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"game-invaders"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #")) "
0 0 14 3 4 #"true"
0 0 25 3 20 #"]                   "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 4 #"])) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";; ListOfInvaders -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 75
(18
 #";; returns true if one of the invaders has reached the bottom of the "
 #"screen"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 3 #")) "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 3 #")) "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";;(define (invaders-reached? loin) false) ;stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 20 #"]                   "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"reached?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 3 #")) "
0 0 14 3 4 #"true"
0 0 25 3 2 #"] "
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #"("
0 0 14 3 17 #"invaders-reached?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 4 #"loin"
0 0 25 3 8 #"))])])) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; Inveder -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";; checks whether the invader has reached the bottom of the screen"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"reached?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I1"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"reached?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I2"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"reached?"
0 0 25 3 1 #" "
0 0 14 3 2 #"I3"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";(define (reached? invader) false);stub"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"reached?"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 4 #" [ ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 25 3 1 #" "
0 0 14 3 7 #"invader"
0 0 25 3 2 #") "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0           0
